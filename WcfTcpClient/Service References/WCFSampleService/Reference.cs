//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfTcpClient.WCFSampleService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsf.Samples.WCF")]
    [System.SerializableAttribute()]
    public partial class ClientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderRecord", Namespace="http://schemas.datacontract.org/2004/07/Gsf.Samples.WCF")]
    [System.SerializableAttribute()]
    public partial class OrderRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderData {
            get {
                return this.OrderDataField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDataField, value) != true)) {
                    this.OrderDataField = value;
                    this.RaisePropertyChanged("OrderData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Gsf.Samples.WCF", ConfigurationName="WCFSampleService.IMyService", CallbackContract=typeof(WcfTcpClient.WCFSampleService.IMyServiceCallback))]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/Initialize")]
        void Initialize(WcfTcpClient.WCFSampleService.ClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/Initialize")]
        System.Threading.Tasks.Task InitializeAsync(WcfTcpClient.WCFSampleService.ClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/StartCallback")]
        void StartCallback();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/StartCallback")]
        System.Threading.Tasks.Task StartCallbackAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/StopCallback")]
        void StopCallback();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/StopCallback")]
        System.Threading.Tasks.Task StopCallbackAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Gsf.Samples.WCF/IMyService/GetNextOrderId", ReplyAction="http://Gsf.Samples.WCF/IMyService/GetNextOrderIdResponse")]
        int GetNextOrderId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Gsf.Samples.WCF/IMyService/GetNextOrderId", ReplyAction="http://Gsf.Samples.WCF/IMyService/GetNextOrderIdResponse")]
        System.Threading.Tasks.Task<int> GetNextOrderIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/AddOrder")]
        void AddOrder(WcfTcpClient.WCFSampleService.OrderRecord record);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/AddOrder")]
        System.Threading.Tasks.Task AddOrderAsync(WcfTcpClient.WCFSampleService.OrderRecord record);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Gsf.Samples.WCF/IMyService/WatchDog")]
        void WatchDog();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : WcfTcpClient.WCFSampleService.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.DuplexClientBase<WcfTcpClient.WCFSampleService.IMyService>, WcfTcpClient.WCFSampleService.IMyService {
        
        public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Initialize(WcfTcpClient.WCFSampleService.ClientInfo info) {
            base.Channel.Initialize(info);
        }
        
        public System.Threading.Tasks.Task InitializeAsync(WcfTcpClient.WCFSampleService.ClientInfo info) {
            return base.Channel.InitializeAsync(info);
        }
        
        public void StartCallback() {
            base.Channel.StartCallback();
        }
        
        public System.Threading.Tasks.Task StartCallbackAsync() {
            return base.Channel.StartCallbackAsync();
        }
        
        public void StopCallback() {
            base.Channel.StopCallback();
        }
        
        public System.Threading.Tasks.Task StopCallbackAsync() {
            return base.Channel.StopCallbackAsync();
        }
        
        public int GetNextOrderId() {
            return base.Channel.GetNextOrderId();
        }
        
        public System.Threading.Tasks.Task<int> GetNextOrderIdAsync() {
            return base.Channel.GetNextOrderIdAsync();
        }
        
        public void AddOrder(WcfTcpClient.WCFSampleService.OrderRecord record) {
            base.Channel.AddOrder(record);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(WcfTcpClient.WCFSampleService.OrderRecord record) {
            return base.Channel.AddOrderAsync(record);
        }
    }
}
